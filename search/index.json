[{"content":"本文主要用于测试hugo渲染\n","date":"2025-04-10T00:00:00Z","permalink":"https://Aithan-web.github.io/p/test/","title":"test"},{"content":"Git 是一个分布式版本控制系统，它是一种用于管理文件和目录的软件工具，广泛应用于软件开发领域。\n1 Git基本信息 1.1 Git 的定义 1.1.1 版本控制系统（VCS） 版本控制系统是一种记录文件和目录变化历史的工具。它可以帮助用户跟踪文件的修改、比较不同版本之间的差异、恢复到旧版本等。\n版本控制系统分为集中式和分布式两种。Git 是一种分布式版本控制系统，这意味着每个开发者在本地都有一个完整的代码仓库副本，包括代码文件、历史记录等。\n1.1.2 Git 的特点 分布式架构：每个开发者都有完整的代码仓库副本，可以在本地进行离线开发，然后将更改推送到远程仓库。\n高效性：Git 使用高效的存储和检索机制，能够快速处理大量的文件和复杂的项目。\n分支功能强大：Git 的分支操作非常灵活，可以轻松创建、切换、合并和删除分支，方便开发者进行功能开发、修复问题等。\n安全性：Git 使用 SHA-1 散列算法对每个提交进行唯一标识，确保数据的完整性和安全性。\n1.2 Git 的用途 1.2.1 软件开发 代码管理：Git 可以帮助开发者管理代码文件，记录代码的修改历史，方便团队协作开发。\n版本控制：开发者可以通过 Git 创建不同的版本，如开发版本、测试版本和生产版本，方便管理和发布软件。\n团队协作：Git 支持多个开发者同时工作，通过分支和合并机制，可以有效地协调开发进度，减少冲突。\n代码审查：Git 提供了代码审查的功能，开发者可以提交代码后，由其他开发者进行审查，确保代码质量。\n1.2.2 个人项目 文档管理：Git 也可以用于管理文档、配置文件等，记录文件的修改历史，方便版本回溯。\n学习记录：对于学习编程的人来说，Git 可以帮助记录学习过程中的代码修改，方便回顾和总结。\n1.3 Git 的工作原理 工作区（Working Directory）：工作区是开发者实际操作的目录，包含了项目的文件和目录。开发者可以在工作区中修改文件、添加新文件等。\n暂存区（Staging Area）：暂存区是一个临时存储区域，用于存放即将提交到仓库的文件。当开发者使用 git add 命令时，文件会被添加到暂存区。\n本地仓库（Local Repository）：本地仓库是存储在本地的代码仓库副本，包含了项目的完整历史记录。开发者可以通过 git commit 命令将暂存区的文件提交到本地仓库。\n远程仓库（Remote Repository）：远程仓库是存储在服务器上的代码仓库副本，用于团队协作和代码备份。开发者可以通过 git push 命令将本地仓库的更改推送到远程仓库，也可以通过 git pull 命令从远程仓库拉取最新的更改。\n1.4 Git 的优势 灵活性：Git 的分布式架构使得开发者可以在本地自由地进行开发，不受网络环境的限制。同时，Git 提供了丰富的命令和工具，可以满足不同开发场景的需求。\n高效性：Git 的数据存储和检索机制非常高效，能够快速处理大量的文件和复杂的项目。Git 的分支操作也非常快速，不会影响其他分支的开发。\n安全性：Git 使用 SHA-1 散列算法对每个提交进行唯一标识，确保数据的完整性和安全性。Git 还提供了权限管理功能，可以控制不同用户对仓库的访问权限。\n社区支持：Git 是开源软件，拥有庞大的用户社区和丰富的文档资源。开发者可以通过社区获取技术支持和经验分享，也可以参与到 Git 的开发和改进中。\n1.5 Git 的应用场景 开源项目：许多开源项目使用 Git 来管理代码，如 Linux 内核、Git 本身等。开发者可以通过 Git 克隆开源项目的代码仓库，参与项目开发，提交代码贡献。\n企业开发：企业也广泛使用 Git 来管理软件开发项目。Git 的分支功能和团队协作机制可以帮助企业高效地进行项目开发和版本管理。\n个人学习：对于学习编程的人来说，Git 是一个非常有用的工具。可以通过 Git 记录学习过程中的代码修改，方便回顾和总结。\n2. Windows安装 Git 访问 Git 官方网站（https://git-scm.com/），下载对应版本的安装程序。\n运行安装程序，按照提示进行安装。在安装过程中，可以选择默认的设置，如安装路径、默认的文本编辑器等。\n安装完成后，在命令行工具（如 cmd 或 PowerShell）中输入 git --version，如果显示 Git 的版本号，说明安装成功。\n3 配置 Git 3.1 全局配置 配置用户名和邮箱，这些信息会在提交代码时被记录。在命令行中输入以下命令：\n1 git config --global user.name \u0026#34;用户名\u0026#34; 1 git config --global user.email \u0026#34;邮箱地址\u0026#34; 这样配置后，无论在哪个项目中提交代码，都会使用这个用户名和邮箱。\n3.2 本地配置（可选） 如果要为某个特定的项目设置不同的用户名和邮箱，可以在项目的根目录下运行以下命令：\n1 git config user.name \u0026#34;特定项目的用户名\u0026#34; 1 git config user.email \u0026#34;特定项目的邮箱地址\u0026#34; 这样只会对该项目产生影响，而不会影响其他项目。\n4 本地仓库 4.1 初始化新仓库 首先，创建一个目录作为你的项目文件夹。在命令行中输入 mkdir 项目名称，然后进入该目录，使用命令 cd 项目名称。\n在项目目录中运行 git init 命令来初始化一个 Git 仓库。这个命令会在当前目录下创建一个名为 .git 的隐藏目录，里面包含了 Git 仓库的所有必要文件。\n4.2 克隆现有仓库 如果想使用一个已经存在的远程仓库，可以通过克隆的方式来获取代码。在命令行中输入 git clone 远程仓库地址（例如 https://github.com/用户名/仓库名.git）。\n克隆完成后，Git 会创建一个与远程仓库同名的本地目录，并将远程仓库中的代码和历史记录都复制到本地目录中。\n4.3 添加文件到仓库 添加单个文件 当在项目目录中创建或修改了一个文件后，需要将这个文件添加到暂存区（staging area）。\n使用命令 git add 文件名（例如 git add README.md）。\n这样，Git 就会将这个文件标记为即将提交的内容。\n添加多个文件 如果一次性修改了多个文件，可以使用 git add . 命令将当前目录下的所有修改过的文件添加到暂存区。\n也可以使用 git add -A 命令，它会将所有修改过的文件（包括新添加的文件、修改过的文件和删除的文件）都添加到暂存区。\n查看状态 在添加文件之前或之后，可以使用 git status 命令来查看当前仓库的状态。这个命令显示哪些文件已经被添加到暂存区，哪些文件还没有被添加，以及是否有未跟踪的文件等信息。\n4.4 提交文件到仓库 提交更改 当你将文件添加到暂存区后，就可以使用 git commit 命令将这些更改提交到本地仓库了。在命令行中输入 git commit -m \u0026quot;提交信息\u0026quot;（将“提交信息”替换为你对这次提交的描述，例如 “添加了 README 文件”）。\n提交信息是必须的，它可以帮助你和其他开发者了解这次提交的内容和目的。\n查看提交日志 提交完成后，你可以使用 git log 命令来查看提交日志。这个命令会显示每次提交的详细信息，包括提交的哈希值（commit hash）、提交者、提交日期和提交信息等。\n如果你只想查看最近几次的提交，可以使用 git log -n 命令（“n”为想要查看的提交数量，例如 git log -5 表示查看最近 5 次提交）。\n5 与远程仓库交互 添加远程仓库 如果之前是通过 git init 初始化的本地仓库，需要将它与远程仓库关联起来。使用命令 git remote add origin 远程仓库地址。\n这里的“origin”是远程仓库的默认名称，可以根据实际需要使用其他名称。\n推送代码到远程仓库 当完成了本地的提交后，可以使用 git push 命令将代码推送到远程仓库。在命令行中输入 git push -u origin main（假设本次修改的本地分支是 main，远程分支也是 main）。\n第一次推送时，-u 参数会将本地分支与远程分支关联起来，以后就可以直接使用 git push 命令来推送代码了。\n从远程仓库拉取代码 如果远程仓库中有新的代码更新，可以使用 git pull 命令将这些更新拉取到本地仓库。在命令行中输入 git pull origin main。\n这个命令会自动将远程仓库中的更改合并到本地分支中。如果存在冲突，Git 会提示解决冲突后再完成合并。\n6 分支操作 创建分支 在开发过程中可能需要创建新的分支来进行功能开发或修复问题。使用命令 git branch 分支名来创建一个新的分支。\n创建分支后，当掐仍然在原来的分支上，需要切换到新创建的分支。\n切换分支 使用命令 git checkout 分支名来切换到目标分支。\n也可以使用 git checkout -b 分支名 命令来同时创建并切换到一个新的分支，这相当于先执行 git branch 分支名，再执行 git checkout 分支名。\n查看分支 使用 git branch 命令可以查看当前仓库中的所有分支。当前所在的分支前面会有一个星号（*）标记。\n合并分支 当在某个分支上完成了开发工作，需要将分支的更改合并回主分支（如 main）。首先切换到主分支，然后使用命令 git merge 分支名（“分支名”为要合并的分支名称）。\n如果合并过程中没有冲突，Git 会自动完成合并。如果有冲突，Git 会提示需要手动解决冲突后再完成合并。\n删除分支 当不再需要某个分支时，可以使用 git branch -d 分支名来删除该分支。\n如果分支还没有被合并，Git 会阻止删除操作。如果确定要强制删除，可以使用 git branch -D 分支名 命令。\n7 解决冲突 冲突产生的原因 当你在本地分支和远程分支（或不同的本地分支）上对同一个文件的同一部分进行了修改，然后尝试合并时，就会产生冲突。\n解决冲突的步骤 首先，Git 会标记出冲突的文件，并提示你解决冲突。打开冲突的文件，你会看到类似以下的内容：\n\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; HEAD：表示本地分支的更改。\n=======：分隔符。\n\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; 分支名：表示要合并的分支的更改。\n你需要手动编辑文件，决定保留哪些更改，删除冲突标记（\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;、======= 和 `\n","date":"2025-04-06T00:00:00Z","image":"https://Aithan-web.github.io/p/git-%E5%9F%BA%E7%A1%80/Git_hu_10862ee2351a2c07.jpg","permalink":"https://Aithan-web.github.io/p/git-%E5%9F%BA%E7%A1%80/","title":"Git 基础"},{"content":"文章主要用于测试\n无正文内容\n2025.4.测试 2025.05.04测试结果 LaTeX公式样式：\n\\[E = mc^2\\]markdown\n$$E = mc^2$$","date":"2025-03-11T00:00:00Z","permalink":"https://Aithan-web.github.io/p/%E6%B5%8B%E8%AF%95/","title":"测试"},{"content":"Markdown 基本语法 01 标题语法 要创建标题，请在单词或短语前面添加井号 (#) 。# 的数量代表了标题的级别。例如，添加三个 # 表示创建一个三级标题 (\u0026lt;h3\u0026gt;) (例如：### My Header)。\nMarkdown语法 预览效果 # Heading level 1 Heading level 1 ## Heading level 2 Heading level 2 ### Heading level 3 Heading level 3 #### Heading level 4 Heading level 4 ##### Heading level 5 Heading level 5 ###### Heading level 6 Heading level 6 可选语法 还可以在文本下方添加任意数量的 == 号来标识一级标题，或者 \u0026ndash; 号来标识二级标题。\nMarkdown语法 预览效果 Heading level 1 =============== Heading level 1 Heading level 2 --------------- Heading level 2 02 段落语法 要创建段落，请使用空白行将一行或多行文本进行分隔。\nMarkdown语法 预览效果 I really like using Markdown. I think I'll use it to format all of my documents from now on. I really like using Markdown.I think I\u0026rsquo;ll use it to format all of my documents from now on. 03 换行语法 在一行的末尾添加两个或多个空格，然后按回车键,即可创建一个换行(\u0026lt;br\u0026gt;)。\nMarkdown语法 预览效果 This is the first line. And this is the second line. This is the first line. And this is the second line. 04 强调语法 通过将文本设置为粗体或斜体来强调其重要性。\n4.1 粗体（Bold） 要加粗文本，请在单词或短语的前后各添加两个星号（asterisks）或下划线（underscores）。如需加粗一个单词或短语的中间部分用以表示强调的话，请在要加粗部分的两侧各添加两个星号（asterisks）。\nMarkdown语法 预览效果 I just love **bold text**. I just love bold text. I just love __bold text__. I just love bold text. Love**is**bold Loveisbold 4.2 斜体（Italic） 要用斜体显示文本，请在单词或短语前后添加一个星号（asterisk）或下划线（underscore）。要斜体突出单词的中间部分，请在字母前后各添加一个星号，中间不要带空格。\nMarkdown语法 预览效果 Italicized text is the *cat's meow*. Italicized text is the cat’s meow. Italicized text is the _cat's meow_. Italicized text is the cat’s meow. A*cat*meow A_cat_meow 4.3 粗体（Bold）和斜体（Italic） 要同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号或下划线。要加粗并用斜体显示单词或短语的中间部分，请在要突出显示的部分前后各添加三个星号，中间不要带空格。\nMarkdown语法 预览效果 This text is ***really important***. This text is really important. This text is ___really important___. This text is really important. This text is __*really important*__. This text is really important. This text is **_really important_**. This text is really important. This is really***very***important text. This is really**very**important text. 05 引用语法 要创建块引用，请在段落前添加一个 \u0026gt; 符号。\n1 \u0026gt; Dorothy followed her through many of the beautiful rooms in her castle. 渲染效果如下所示：\nDorothy followed her through many of the beautiful rooms in her castle.\n5.1 多个段落的块引用 块引用可以包含多个段落。为段落之间的空白行添加一个 \u0026gt; 符号。\n1 2 3 \u0026gt; Dorothy followed her through many of the beautiful rooms in her castle. \u0026gt; \u0026gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood. 渲染效果如下：\nDorothy followed her through many of the beautiful rooms in her castle.\nThe Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.\n5.2 嵌套块引用 块引用可以嵌套。在要嵌套的段落前添加一个 \u0026gt;\u0026gt; 符号。\n1 2 3 \u0026gt; Dorothy followed her through many of the beautiful rooms in her castle. \u0026gt; \u0026gt;\u0026gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood. 渲染效果如下：\nDorothy followed her through many of the beautiful rooms in her castle.\nThe Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.\n5.3 带有其它元素的块引用 块引用可以包含其他 Markdown 格式的元素。并非所有元素都可以使用，你需要进行实验以查看哪些元素有效。\n1 2 3 4 5 6 \u0026gt; The quarterly results look great! \u0026gt; \u0026gt; - Revenue was off the chart. \u0026gt; - Profits were higher than ever. \u0026gt; \u0026gt; *Everything* is going according to **plan**. 渲染效果如下：\nThe quarterly results look great!\nRevenue was off the chart. Profits were higher than ever. Everything is going according to plan.\n06 列表语法 可以将多个条目组织成有序或无序列表。\n6.1 有序列表 要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。数字不必按数学顺序排列，但是列表应当以数字 1 起始。\nMarkdown语法 预览效果 1. First item\n2. Second item\n3. Third item\n4. Fourth item\n1. First item\n2. Second item\n3. Third item\n4. Fourth item\n1. First item\n1. Second item\n1. Third item\n1. Fourth item\n1. First item\n2. Second item\n3. Third item\n4. Fourth item\n1. First item\n8. Second item\n3. Third item\n5. Fourth item\n1. First item\n2. Second item\n3. Third item\n4. Fourth item\n1. First item\n2. Second item\n3. Third item\n1. Indented item\n2. Indented item\n4. Fourth item\n1. First item\n2. Second item\n3. Third item\n1. Indented item\n2. Indented item\n4. Fourth item\n6.2 无序列表 要创建无序列表，请在每个列表项前面添加破折号 (-)、星号 (*) 或加号 (+) 。缩进一个或多个列表项可创建嵌套列表。\nMarkdown语法 预览效果 - First item\n- Second item\n- Third item\n- Fourth item * First item\n* Second item\n* Third item\n* Fourth item * First item\n* Second item\n* Third item\n* Fourth item\n* First item\n* Second item\n* Third item\n* Fourth item + First item\n+ Second item\n+ Third item\n+ Fourth item\n* First item\n* Second item\n* Third item\n* Fourth item\n- First item\n- Second item\n- Third item\n- Indented item\n- Indented item\n- Fourth item\n* First item\n* Second item\n* Third item\n* Indented item\n* Indented item\n* Fourth item\n07 代码语法 要将单词或短语表示为代码，请将其包裹在反引号 (`) 中。\nMarkdown语法 预览效果 At the command prompt, type `nano`. At the command prompt, type nano. 7.1转义反引号 如果你要表示为代码的单词或短语中包含一个或多个反引号，则可以通过将单词或短语包裹在双反引号(``)中。\nMarkdown语法 预览效果 ``Use `code` in your Markdown file.`` Use `code` in your Markdown file. 7.2代码块 要创建代码块，请将代码块的每一行缩进至少四个空格或一个制表符。\n1 2 3 4 \u0026amp;lt;html\u0026gt; \u0026amp;lt;head\u0026gt; \u0026amp;lt;/head\u0026gt; \u0026amp;lt;/html\u0026gt; 渲染效果如下：\n\u0026amp;lt;html\u0026gt; \u0026amp;lt;head\u0026gt; \u0026amp;lt;/head\u0026gt; \u0026amp;lt;/html\u0026gt; 08 分隔线语法 要创建分隔线，请在单独一行上使用三个或多个星号 (***)、破折号 (---) 或下划线 (___) ，并且不能包含其他内容。\n1 2 3 *** --- _________________ 以上三个分隔线的渲染效果看起来都一样。\n09 链接语法 链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。 超链接Markdown语法代码：[超链接显示名](超链接地址 \u0026quot;超链接title\u0026quot;) 对应的HTML代码：\u0026lt;a href=\u0026quot;超链接地址\u0026quot; title=\u0026quot;超链接title\u0026quot;\u0026gt;超链接显示名\u0026lt;/a\u0026gt;\n1 这是一个链接 [Markdown语法](https://markdown.com.cn)。 渲染效果如下：\n这是一个链接 Markdown语法 (opens new window)。\n9.1 给链接增加Title 链接title是当鼠标悬停在链接上时会出现的文字，这个title是可选的，它放在圆括号中链接地址后面，跟链接地址之间以空格分隔。\n1 这是一个链接 [Markdown语法](https://markdown.com.cn \u0026#34;最好的markdown教程\u0026#34;)。 渲染效果如下：\n这是一个链接 Markdown语法 (opens new window)\n9.2 网址和Email地址 使用尖括号可以很方便地把URL或者email地址变成可点击的链接。\n1 2 \u0026lt;https://markdown.com.cn\u0026gt; \u0026lt;fake@example.com\u0026gt; 渲染效果如下：\nhttps://markdown.com.cn (opens new window)\nfake@example.com\n9.3 带格式化的链接 [强调]链接, 在链接语法前后增加星号。 要将链接表示为代码，请在方括号中添加反引号。\n1 2 3 I love supporting the **[EFF](https://eff.org)**. This is the *[Markdown Guide](https://www.markdownguide.org)*. See the section on [`code`](#code). 渲染效果如下：\nI love supporting the EFF. This is the Markdown Guide. See the section on code.\n9.4 引用类型链接 引用样式链接是一种特殊的链接，它使URL在Markdown中更易于显示和阅读。参考样式链接分为两部分：与文本保持内联的部分以及存储在文件中其他位置的部分，以使文本易于阅读。\n9.4.1 链接的第一部分格式 引用类型的链接的第一部分使用两组括号进行格式设置。第一组方括号包围应显示为链接的文本。第二组括号显示了一个标签，该标签用于指向您存储在文档其他位置的链接。 尽管不是必需的，可以在第一组和第二组括号之间包含一个空格。第二组括号中的标签不区分大小写，可以包含字母，数字，空格或标点符号。 以下示例格式对于链接的第一部分效果相同：\n[hobbit-hole][1] [hobbit-hole] [1] 9.4.2 链接的第二部分格式 引用类型链接的第二部分使用以下属性设置格式：\n放在括号中的标签，其后紧跟一个冒号和至少一个空格（例如[label]:）。 链接的URL，可以选择将其括在尖括号中。 链接的可选标题，可以将其括在双引号，单引号或括号中。 以下示例格式对于链接的第二部分效果相同： [1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle [1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle \u0026quot;Hobbit lifestyles\u0026quot; [1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle 'Hobbit lifestyles' [1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle (Hobbit lifestyles) [1]: \u0026lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle\u0026gt; \u0026quot;Hobbit lifestyles\u0026quot; [1]: \u0026lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle\u0026gt; 'Hobbit lifestyles' [1]: \u0026lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle\u0026gt; (Hobbit lifestyles) 可以将链接的第二部分放在Markdown文档中的任何位置。有些人将它们放在出现的段落之后，有些人则将它们放在文档的末尾（例如尾注或脚注）。 10 图片语法 要添加图像，请使用感叹号 (!), 然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。 插入图片Markdown语法代码：![图片alt](图片链接 \u0026quot;图片title\u0026quot;)。 对应的HTML代码：\u0026lt;img src=\u0026quot;图片链接\u0026quot; alt=\u0026quot;图片alt\u0026quot; title=\u0026quot;图片title\u0026quot;\u0026gt;\n10.1 本地图片 1 ![Wilderness](../../../Article1/Wilderness.jpg \u0026#34;Wilderness\u0026#34;) 渲染效果如下： 10.2 链接图片 给图片增加链接，请将图像的Markdown 括在方括号中，然后将链接添加在圆括号中。\n1 ![Shiprock](../../../images/Article1/shiprock.jpg \u0026#34;Shiprock\u0026#34;) 渲染效果如下：\n10.3 自定义图片 当添加的图片尺寸和位置不符合要求时，可以对其进行修改。在Markdown中，添加图片时默认不支持直接设置图片的宽高属性和位置信息。但是，可以通过一些扩展语法或HTML标签来实现自定义图片尺寸。在VSCode中最简洁的方式为：\n自定义图片尺寸 使用HTML标签：可以使用 width 和 height 属性来设置图片的长宽 1 \u0026lt;img src=\u0026#34;Wilderness.jpg\u0026#34; style=\u0026#34;width: 50%; height: auto;\u0026#34;\u0026gt; 渲染效果如下：\n其中 height: auto; 会根据原始图片比例自动调整高度，避免变形。\n使用CSS可以更灵活地改变图片尺寸 1 \u0026lt;img src=\u0026#34;Wilderness.jpg\u0026#34; style=\u0026#34;width: 300px; height: auto;\u0026#34;\u0026gt; px 是像素（pixel）的缩写，一个像素是显示屏上的一个点，通常用于定义宽度、高度、边距、字体大小等。 width: 300px表示图片的宽度是 300 个像素;height: 200px表示图片的高度是 200 个像素。\n使用Markdown+HTML混合：该方式既能保持Markdown的简洁性，又能灵活设置图片尺寸，因此可以将HTML标签和Markdown语法结合使用。 1 2 3 4 \u0026lt;figure\u0026gt; \u0026lt;img src=\u0026#34;https://cdn.pixabay.com/photo/2022/02/05/12/42/sea-of-clouds-6994730_1280.jpg\u0026#34; alt=\u0026#34;Sea of Clouds\u0026#34; width=\u0026#34;300\u0026#34; height=\u0026#34;200\u0026#34;\u0026gt; \u0026lt;figcaption\u0026gt;Sea of Clouds\u0026lt;/figcaption\u0026gt; \u0026lt;/figure\u0026gt; 渲染效果如下：\nSea of Clouds 自定义图片位置 \u0026lt;img\u0026gt; 标签在 HTML 中的默认行为通常是左对齐。因为图片是内联元素（inline element），它默认会按照文档的文本流对齐到左侧。如果想调整对齐方式，可以使用通过修改相应的元素实现。\n1. 居中对齐\n1 \u0026lt;img src=\u0026#34;Wilderness.jpg\u0026#34; width=\u0026#34;50%\u0026#34; style=\u0026#34;display: block; margin: auto;\u0026#34;/\u0026gt; 或者\n1 \u0026lt;center\u0026gt;\u0026lt;img src=\u0026#34;Wilderness.jpg\u0026#34; width=\u0026#34;50%\u0026#34; /\u0026gt;\u0026lt;/center\u0026gt; 渲染效果如下 2. 右对齐\n1 \u0026lt;img src=\u0026#34;Wilderness.jpg\u0026#34; style=\u0026#34;display: block; margin-left: auto; margin-right: 0;\u0026#34;/\u0026gt; 渲染效果： 11 内嵌HTML标签 对于 Markdown 涵盖范围之外的标签，都可以直接在文件里面用 HTML 本身。如需使用 HTML，不需要额外标注这是 HTML 或是 Markdown，只需 HTML 标签添加到 Markdown 文本中即可。\n11.1 行级內联标签 HTML 的行级內联标签如 \u0026lt;span\u0026gt;、\u0026lt;cite\u0026gt;、\u0026lt;del\u0026gt; 不受限制，可以在 Markdown 的段落、列表或是标题里任意使用。依照个人习惯，甚至可以不用 Markdown 格式，而采用 HTML 标签来格式化。例如：如果比较喜欢 HTML 的 \u0026lt;a\u0026gt; 或 \u0026lt;img\u0026gt; 标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是图片语法。当你需要更改元素的属性时（例如为文本指定颜色或更改图像的宽度），使用 HTML 标签更方便些。 HTML 行级內联标签和区块标签不同，在內联标签的范围内， Markdown 的语法是可以解析的。\n1 This **word** is bold. This \u0026lt;em\u0026gt;word\u0026lt;/em\u0026gt; is italic. 渲染效果如下: This word is bold. This word is italic.\n11.2 区块标签 区块元素──比如 \u0026lt;div\u0026gt;、\u0026lt;table\u0026gt;、\u0026lt;pre\u0026gt;、\u0026lt;p\u0026gt; 等标签，必须在前后加上空行，以便于内容区分。而且这些元素的开始与结尾标签，不可以用 tab 或是空白来缩进。Markdown 会自动识别这区块元素，避免在区块标签前后加上没有必要的 \u0026lt;p\u0026gt; 标签。 例如，在 Markdown 文件里加上一段 HTML 表格：\n1 2 3 4 5 6 7 8 9 This is a regular paragraph. \u0026lt;table\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;Foo\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; This is another regular paragraph. 请注意，Markdown 语法在 HTML 区块标签中将不会被进行处理。例如，你无法在 HTML 区块内使用 Markdown 形式的*强调*。\n12 转义字符语法 要显示原本用于格式化 Markdown 文档的字符，请在字符前面添加反斜杠字符 \\ 。\n1 \\* Without the backslash, this would be a bullet in an unordered list. 渲染效果如下：\n* Without the backslash, this would be a bullet in an unordered list.\n12.1 可做转义的字符 以下列出的字符都可以通过使用反斜杠字符从而达到转义目的。\nCharacter Name \\ backslash ` backtick (see also escaping backticks in code) * asterisk _ underscore { } curly braces \\[ \\] brackets ( ) parentheses # pound sign + plus sign - minus sign (hyphen) . dot ! exclamation mark 12.2 特殊字符自动转义 在 HTML 文件中，有两个字符需要特殊处理： \u0026lt; 和 \u0026amp; 。 \u0026lt; 符号用于起始标签，\u0026amp; 符号则用于标记 HTML 实体，如果你只是想要使用这些符号，你必须要使用实体的形式，像是 \u0026amp;lt; 和 \u0026amp;amp;。 \u0026amp; 符号其实很容易让写作网页文件的人感到困扰，如果你要打「AT\u0026amp;T」 ，你必须要写成「AT\u0026amp;amp;T」 ，还得转换网址内的 \u0026amp; 符号，如果你要链接到：\n1 http://images.google.com/images?num=30\u0026amp;q=larry+bird 你必须要把网址转成：\n1 http://images.google.com/images?num=30\u0026amp;amp;q=larry+bird 才能放到链接标签的 href 属性里。不用说也知道这很容易忘记，这也可能是 HTML 标准检查所检查到的错误中，数量最多的。 Markdown 允许你直接使用这些符号，它帮你自动转义字符。如果你使用 \u0026amp; 符号的作为 HTML 实体的一部分，那么它不会被转换，而在其它情况下，它则会被转换成 \u0026amp;amp;。所以你如果要在文件中插入一个著作权的符号，你可以这样写：\n1 \u0026amp;copy; Markdown 将不会对这段文字做修改，但是如果你这样写：\n1 AT\u0026amp;T Markdown 就会将它转为：\n1 AT\u0026amp;amp;T 类似的状况也会发生在 \u0026lt; 符号上，因为 Markdown 支持 行内 HTML ，如果你使用 \u0026lt; 符号作为 HTML 标签的分隔符，那 Markdown 也不会对它做任何转换，但是如果你是写：\n1 4 \u0026lt; 5 Markdown 将会把它转换为：\n1 4 \u0026amp;lt; 5 需要特别注意的是，在 Markdown 的块级元素和内联元素中， \u0026lt; 和 \u0026amp; 两个符号都会被自动转换成 HTML 实体，这项特性让你可以很容易地用 Markdown 写 HTML。（在 HTML 语法中，你要手动把所有的 \u0026lt; 和 \u0026amp; 都转换为 HTML 实体。）\n本文内容转自 https://markdown.com.cn，如有侵权，请联系删除。\n","date":"2025-03-05T00:00:00Z","image":"https://Aithan-web.github.io/p/markdown-%E8%AF%AD%E6%B3%95/markdown_hu_69c72bc758ae4adf.png","permalink":"https://Aithan-web.github.io/p/markdown-%E8%AF%AD%E6%B3%95/","title":"Markdown 语法"},{"content":"使用PyInstaller 进行 Python 多入口项目打包实践。以下是本次测试的项目结构：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 . ├── 2048/ │ ├── 2048.py # 2048 游戏逻辑与 UI │ └── high_score.txt # 2048 最高分记录文件 ├── Gobang/ │ ├── ManAndMachine.py # 五子棋人机对战逻辑与 UI │ ├── ManAndMan.py # 五子棋人人对战逻辑与 UI │ └── checkerboard.py # 五子棋共享棋盘逻辑与棋子定义 ├── Minesweeper/ │ └── Minesweeper.py # 扫雷游戏逻辑与 UI ├── Snake/ │ └── Snake-eating.py # 贪吃蛇游戏逻辑与 UI ├── resource/ │ ├── fonts/ │ │ └── simsun.ttc # 启动器使用的字体文件 (宋体) │ └── images/ | └── favicon.ico # 启动器图标 │ ├── 2048.ico # 2048 图标 │ ├── gobang.ico # 五子棋图标 │ ├── minesweeper.ico # 扫雷图标 │ └── snake.ico # 贪吃蛇图标 ├── .idea/ # IDE 配置文件 (例如 PyCharm, VSCode) ├── game_launcher.py # 主入口 - 基于 Tkinter 的游戏选择器 UI 1. 准备环境 首先确保已经安装 Python 和 PyInstaller：\n1 pip install pyinstaller 2. 创建打包脚本 创建一个打包脚本 build.spec 或在命令行直接使用 PyInstaller 命令。以下是推荐的方式：\n方法一：使用命令行直接打包 1 pyinstaller --onefile --windowed --icon=resource/images/favicon.ico --add-data=\u0026#34;resource;resource\u0026#34; --add-data=\u0026#34;2048;2048\u0026#34; --add-data=\u0026#34;Gobang;Gobang\u0026#34; --add-data=\u0026#34;Minesweeper;Minesweeper\u0026#34; --add-data=\u0026#34;Snake;Snake\u0026#34; game_launcher.py 方法二：创建 spec 文件后打包 首先生成 spec 文件： 1 pyinstaller --onefile --windowed game_launcher.py 然后编辑生成的 game_launcher.spec 文件，修改 datas 部分： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 a = Analysis( [\u0026#39;game_launcher.py\u0026#39;], pathex=[], binaries=[], datas=[ (\u0026#39;resource\u0026#39;, \u0026#39;resource\u0026#39;), (\u0026#39;2048\u0026#39;, \u0026#39;2048\u0026#39;), (\u0026#39;Gobang\u0026#39;, \u0026#39;Gobang\u0026#39;), (\u0026#39;Minesweeper\u0026#39;, \u0026#39;Minesweeper\u0026#39;), (\u0026#39;Snake\u0026#39;, \u0026#39;Snake\u0026#39;) ], hiddenimports=[], hookspath=[], hooksconfig={}, runtime_hooks=[], excludes=[], win_no_prefer_redirects=False, win_private_assemblies=False, cipher=block_cipher, noarchive=False, ) 然后使用 spec 文件打包： 1 pyinstaller game_launcher.spec 3. 解决可能的问题 字体问题：确保字体文件正确打包，代码中加载字体时使用相对路径： 1 font_path = os.path.join(os.path.dirname(__file__), \u0026#39;resource\u0026#39;, \u0026#39;fonts\u0026#39;, \u0026#39;simsun.ttc\u0026#39;) 图标问题：确保所有游戏的图标文件正确打包，并在代码中使用相对路径引用。 数据文件问题：对于高分记录等文件，确保使用相对路径访问： 1 high_score_path = os.path.join(os.path.dirname(__file__), \u0026#39;2048\u0026#39;, \u0026#39;high_score.txt\u0026#39;) 4. 自定义输出名： 1 pyinstaller --onefile --windowed --name \u0026#34;MyGameLauncher\u0026#34; game_launcher.py 5. 测试 打包完成后，确保：\n打包完成后，EXE 文件会生成在 dist 目录下 所有游戏都能从启动器正常启动 高分记录功能正常工作 所有图标和资源显示正常 没有控制台窗口弹出（因为使用了 \u0026ndash;windowed 参数） 关键注意点 ","date":"2025-02-19T00:00:00Z","image":"https://Aithan-web.github.io/p/pyinstaller-%E7%AE%80%E5%8D%95%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B52-%E5%A4%9A%E5%85%A5%E5%8F%A3%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85/PyInstaller_hu_d0a49911f510facb.png","permalink":"https://Aithan-web.github.io/p/pyinstaller-%E7%AE%80%E5%8D%95%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B52-%E5%A4%9A%E5%85%A5%E5%8F%A3%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85/","title":"PyInstaller 简单项目实践2-多入口项目打包"},{"content":"PyInstaller 支持跨平台打包，可以将 Python 代码打包成适用于 Windows、macOS 和 Linux 系统的可执行文件。它能够自动查找程序所依赖的 Python 库文件，并将其打包到一个文件或者一个文件夹中。\n1.安装 PyInstaller 使用 pip 安装最新版 PyInstaller：\n1 pip install pyinstaller 升级已安装的 PyInstaller：\n1 pip install --upgrade pyinstaller 在 Windows 系统上，PyInstaller 会自动安装依赖的 PyWin32 或 pypiwin32。\n2.基本打包方法 打开命令提示符或终端，定位到项目文件夹 “E:\\project\\script.py”\n打包为单个文件夹（默认）\n1 pyinstaller script.py 这会在当前目录下生成：\nbuild/ 文件夹：包含临时文件，可安全删除 dist/ 文件夹：包含可执行文件和所有依赖项 打包为单个可执行文件\n1 pyinstaller -F script.py 或\n1 pyinstaller --onefile script.py 这样打包后，在 “dist” 文件夹下会直接生成一个单独的可执行文件，例如 “script.exe”,双击它就可以运行项目，就像运行普通软件一样。这种方式生成的文件体积可能会更大，并且启动时间可能稍长，因为它需要在运行时解压所有依赖。\n指定生成文件的路径\n果不想让 PyInstaller 在默认的 “dist” 文件夹下生成文件，可以指定输出路径。\n1 pyinstaller --distpath=output_folder script.py ","date":"2025-02-16T00:00:00Z","image":"https://Aithan-web.github.io/p/pyinstaller-%E7%AE%80%E5%8D%95%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B51-%E5%8D%95%E5%85%A5%E5%8F%A3%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85/PyInstaller_hu_d0a49911f510facb.png","permalink":"https://Aithan-web.github.io/p/pyinstaller-%E7%AE%80%E5%8D%95%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B51-%E5%8D%95%E5%85%A5%E5%8F%A3%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85/","title":"PyInstaller 简单项目实践1-单入口项目打包"},{"content":"正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用 思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","image":"https://Aithan-web.github.io/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu_2307260c751d0e0b.jpg","permalink":"https://Aithan-web.github.io/p/test-chinese/","title":"Chinese Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://Aithan-web.github.io/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu_e95a4276bf860a84.jpg","permalink":"https://Aithan-web.github.io/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"https://Aithan-web.github.io/p/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu_c1ca39d792aee4ab.jpg","permalink":"https://Aithan-web.github.io/p/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$","date":"2019-03-08T00:00:00Z","permalink":"https://Aithan-web.github.io/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://Aithan-web.github.io/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_hu_27b8954607cdb515.jpg","permalink":"https://Aithan-web.github.io/p/emoji-support/","title":"Emoji Support"},{"content":"","date":"0001-01-01T00:00:00Z","permalink":"https://Aithan-web.github.io/p/","title":""}]